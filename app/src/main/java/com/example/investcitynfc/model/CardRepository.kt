package com.example.investcitynfc.model

class CardRepository {
    private val fortuneCards = listOf(
        Card(
            id = 1,
            type = CardType.FORTUNE,
            title = "Dividendos Esquecidos",
            description = "Voc√™ recebeu dividendos de uma a√ß√£o esquecida!",
            emoji = "üí∞",
            effect = CardEffect.AddMoney(300)
        ),
        Card(
            id = 2,
            type = CardType.FORTUNE,
            title = "Valoriza√ß√£o do Im√≥vel",
            description = "Seu im√≥vel valorizou com a chegada de um shopping na regi√£o.",
            emoji = "üìà",
            effect = CardEffect.AddRentMonth("") // Property ID will be set when used
        ),
        Card(
            id = 3,
            type = CardType.FORTUNE,
            title = "Aplica√ß√£o Especial",
            description = "O banco te ofereceu uma aplica√ß√£o especial.",
            emoji = "üè¶",
            effect = CardEffect.DoubleRent("") // Property ID will be set when used
        ),
        Card(
            id = 4,
            type = CardType.FORTUNE,
            title = "Reembolso do IR",
            description = "Reembolso do imposto de renda caiu na conta.",
            emoji = "üí≥",
            effect = CardEffect.AddMoney(400)
        ),
        Card(
            id = 5,
            type = CardType.FORTUNE,
            title = "Curso de Finan√ßas",
            description = "Voc√™ fez um curso r√°pido sobre finan√ßas.",
            emoji = "üß†",
            effect = CardEffect.SkipNextMisfortune()
        ),
        Card(
            id = 6,
            type = CardType.FORTUNE,
            title = "Parceria Bem-sucedida",
            description = "Parceria bem-sucedida com outro jogador.",
            emoji = "ü§ù",
            effect = CardEffect.AddMoney(200)
        ),
        Card(
            id = 7,
            type = CardType.FORTUNE,
            title = "Melhorias na Propriedade",
            description = "Voc√™ fez melhorias em uma propriedade.",
            emoji = "üõ†Ô∏è",
            effect = CardEffect.IncreaseRentRate("", 0.002) // Property ID will be set when used
        ),
        Card(
            id = 8,
            type = CardType.FORTUNE,
            title = "Destaque na Revista",
            description = "Foi destaque na revista \"Investidores do Ano\"!",
            emoji = "üåü",
            effect = CardEffect.AddRentMonth("") // Property ID will be set when used
        ),
        Card(
            id = 9,
            type = CardType.FORTUNE,
            title = "Pr√™mio de Inova√ß√£o",
            description = "Pr√™mio de inova√ß√£o!",
            emoji = "üèÜ",
            effect = CardEffect.AddMoney(500)
        ),
        Card(
            id = 10,
            type = CardType.FORTUNE,
            title = "D√≠vida Recuperada",
            description = "Recuperou uma d√≠vida antiga.",
            emoji = "üßæ",
            effect = CardEffect.ReceiveFromPlayer(250)
        )
    )

    private val misfortuneCards = listOf(
        Card(
            id = 11,
            type = CardType.MISFORTUNE,
            title = "Reforma Emergencial",
            description = "Uma reforma emergencial foi necess√°ria.",
            emoji = "üîß",
            effect = CardEffect.PayMoney(300)
        ),
        Card(
            id = 12,
            type = CardType.MISFORTUNE,
            title = "Crise Financeira",
            description = "Crise no mercado financeiro.",
            emoji = "üìâ",
            effect = CardEffect.HalveRent("") // Property ID will be set when used
        ),
        Card(
            id = 13,
            type = CardType.MISFORTUNE,
            title = "Vandalismo",
            description = "Sua propriedade sofreu vandalismo.",
            emoji = "üèöÔ∏è",
            effect = CardEffect.LoseRentMonth("") // Property ID will be set when used
        ),
        Card(
            id = 14,
            type = CardType.MISFORTUNE,
            title = "Cobran√ßa Indevida",
            description = "Cobran√ßa indevida no cart√£o.",
            emoji = "üí≥",
            effect = CardEffect.PayMoney(200)
        ),
        Card(
            id = 15,
            type = CardType.MISFORTUNE,
            title = "Conta de Energia Alta",
            description = "A conta de energia da sua empresa veio alt√≠ssima.",
            emoji = "üîå",
            effect = CardEffect.PayMoney(150)
        ),
        Card(
            id = 16,
            type = CardType.MISFORTUNE,
            title = "Problema de Sa√∫de",
            description = "Problema de sa√∫de inesperado.",
            emoji = "ü¶†",
            effect = CardEffect.PayMoney(400)
        ),
        Card(
            id = 17,
            type = CardType.MISFORTUNE,
            title = "Erro no Imposto",
            description = "Erro na declara√ß√£o de imposto.",
            emoji = "üö´",
            effect = CardEffect.PayMoney(250)
        ),
        Card(
            id = 18,
            type = CardType.MISFORTUNE,
            title = "Inc√™ndio",
            description = "Inc√™ndio atinge um de seus im√≥veis.",
            emoji = "üßØ",
            effect = CardEffect.ZeroRent("") // Property ID will be set when used
        ),
        Card(
            id = 19,
            type = CardType.MISFORTUNE,
            title = "Processo Judicial",
            description = "Processo judicial travou sua propriedade.",
            emoji = "‚öñÔ∏è",
            effect = CardEffect.BlockRent("", 2) // Property ID will be set when used
        ),
        Card(
            id = 20,
            type = CardType.MISFORTUNE,
            title = "Golpe em Criptomoeda",
            description = "Investimento em criptomoeda foi golpe.",
            emoji = "ü§∑",
            effect = CardEffect.PayMoney(350)
        )
    )

    fun getRandomFortuneCard(): Card = fortuneCards.random()
    fun getRandomMisfortuneCard(): Card = misfortuneCards.random()
    fun getAllCards(): List<Card> = fortuneCards + misfortuneCards
} 